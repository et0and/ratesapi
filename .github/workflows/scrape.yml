name: Hourly Scraping and Database Updates

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    env:
      CI: "true"
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Login to Cloudflare
        run: npx wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
      - name: Verify D1 database access
        run: |
          echo "Verifying D1 database access for database: ratesapi-data"
          npx wrangler d1 list
          echo "Testing database connectivity:"
          npx wrangler d1 execute ratesapi-data --command="SELECT name FROM sqlite_master WHERE type='table';"

      - name: Run the scraper script for mortgage rates
        run: D1_DATABASE_NAME="ratesapi-data --remote" bun run bin/scrape-mortgage-rates.ts
        
      - name: Run the scraper script for personal loan rates
        run: D1_DATABASE_NAME="ratesapi-data --remote" bun run bin/scrape-personal-loan-rates.ts
 
      - name: Run the scraper script for car loan rates
        run: D1_DATABASE_NAME="ratesapi-data --remote" bun run bin/scrape-car-loan-rates.ts

      - name: Run the scraper script for credit card rates
        run: D1_DATABASE_NAME="ratesapi-data --remote" bun run bin/scrape-credit-card-rates.ts
 
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      # Verify D1 database updates are working
      - name: Force save to D1 database
        if: steps.git-check.outputs.changes == 'true'
        run: |
          TODAY=$(date -u +"%Y-%m-%d")
          echo "Forcing save of data to D1 database to ensure it's working..."
          
          # Save rates data to latest_data and historical_data tables
          echo "Saving rates data to D1 database..."
          bun run bin/force-update-d1.ts
          
          # Verify the data was saved
          echo "Verifying data was saved..."
          npx wrangler d1 execute ratesapi-data --command="SELECT data_type, last_updated FROM latest_data"
          echo "Verifying historical data was saved..."
          npx wrangler d1 execute ratesapi-data --command="SELECT data_type, date, COUNT(*) as count FROM historical_data GROUP BY data_type, date ORDER BY date DESC LIMIT 10"

      - name: Commit changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "Auto-commit changes at $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push
